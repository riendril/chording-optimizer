################################################################################
# Chord Generator Configuration
################################################################################

#------------------------------------------------------------------------------
# Current active selections with file extensions (required)
#------------------------------------------------------------------------------
# Layout file with extension (must exist in key_layouts_dir)
active_layout_file: "Nordrassil_Ergonomic_full.yaml"

# Corpus file with extension (must exist in corpuses_dir)
active_corpus_file: "brown.txt"

# Tokens file with extension (must exist in tokens_dir)
active_tokens_file: "MonkeyType_english_1k.json"

#------------------------------------------------------------------------------
# Core file paths (required)
#------------------------------------------------------------------------------
paths:
  # Base directories
  base_dir: "."
  data_dir: "data"

  # Input directories
  key_layouts_dir: "data/keyLayouts" # Directory containing keyboard layouts
  corpuses_dir: "data/corpuses" # Directory containing text corpuses
  tokens_dir: "data/tokens" # Directory containing token collections

  # Output directories
  chords_dir: "data/chords" # Directory for chord output
  results_dir: "data/results" # Directory for result output
  debug_dir: "data/debug" # Directory for debug output
  cache_dir: "data/cache" # Directory for cached data

#------------------------------------------------------------------------------
# Chord generation parameters
#------------------------------------------------------------------------------
chord_generation:
  # Minimum number of letters per chord (must be at least 1)
  min_letter_count: 2

  # Maximum number of letters per chord
  max_letter_count: 6

  # Whether to allow non-adjacent keys in chords
  allow_non_adjacent_keys: true

#------------------------------------------------------------------------------
# Token analysis configuration
#------------------------------------------------------------------------------
token_analysis:
  # Minimum token length to consider
  min_token_length: 1

  # Maximum token length to consider
  max_token_length: 10

  # Number of top-ranked tokens to include in results
  top_n_tokens: 1000

  # Types of tokens to include in analysis
  include_characters: true # Include individual characters
  include_character_ngrams: true # Include character n-grams (like "th", "ing")
  include_tokens: true # Include whole words
  include_token_ngrams: true # Include word n-grams (like "the cat")

  # Performance optimization
  use_parallel_processing: true # Use multiple CPU cores for processing
  
  # Token length benefit exponent (higher values favor longer tokens)
  length_benefit_exponent: 1.5

#------------------------------------------------------------------------------
# Corpus generation parameters
#------------------------------------------------------------------------------
corpus_generation:
  # Maximum number of samples to collect
  sample_size: 1000

  # Minimum length (in characters) for text samples
  min_length: 50

  # Maximum length (in characters) for text samples
  max_length: 500

  # Target total corpus size in characters
  total_corpus_size: 5000000 # 5MB

  # Relative weights for different content categories (must sum to > 0)
  categories:
    forum: 0.3 # Forum posts and discussions
    subtitles: 0.2 # Movie and TV subtitles
    scientific: 0.15 # Scientific and academic text
    programming: 0.2 # Programming-related content
    general: 0.15 # General literature and web content

  # API keys for external data sources (replace with your own keys)
  api_keys:
    # Key for OpenSubtitles API (for subtitle corpus generation)
    opensubtitles: "YOUR_OPENSUBTITLES_API_KEY"

    # Key for GitHub API (for programming corpus generation)
    github: "YOUR_GITHUB_API_KEY"

#------------------------------------------------------------------------------
# Chord assignment algorithm configuration
#------------------------------------------------------------------------------
chord_assignment:
  # Algorithm to use for chord assignment
  # Available options: "greedy", "genetic", "compare"
  algorithm: "greedy"

  # Penalty weights for different assignment criteria
  # Higher values mean stronger penalties

  # Letter matching weights
  first_letter_unmatched_weight: 1.5 # Penalty when first letter isn't in chord
  second_letter_unmatched_weight: 1.2 # Penalty when second letter isn't in chord
  last_letter_unmatched_weight: 1.3 # Penalty when last letter isn't in chord
  additional_letter_weight: 1.2 # Penalty for each additional letter in chord
  fallback_letter_weight: 1.5 # Penalty for adding fallback letters

  # Physical movement weights
  vertical_stretch_weight: 1.4 # Penalty for vertical key stretches
  vertical_pinch_weight: 1.2 # Penalty for vertical key pinches
  horizontal_stretch_weight: 1.3 # Penalty for horizontal key stretches
  horizontal_pinch_weight: 1.2 # Penalty for horizontal key pinches
  diagonal_stretch_weight: 1.5 # Penalty for diagonal key stretches
  diagonal_pinch_weight: 1.3 # Penalty for diagonal key pinches

  # Finger movement weights
  same_finger_double_weight: 1.5 # Penalty for using same finger twice
  same_finger_triple_weight: 3.0 # Penalty for using same finger three times
  pinky_ring_stretch_weight: 2.0 # Penalty for pinky-ring finger stretches
  ring_middle_scissor_weight: 1.8 # Penalty for ring-middle scissor movements
  middle_index_stretch_weight: 1.6 # Penalty for middle-index stretches

  # Context influence weights
  context_weight: 0.2 # Weight for context influence on scoring (0.0-1.0)
  
  # Genetic algorithm parameters
  population_size: 50    # Genetic algorithm population size
  generations: 100       # Number of generations for genetic algorithm
  elite_count: 5         # Number of elite individuals to preserve unchanged
  mutation_rate: 0.1     # Probability of mutation for each token
  crossover_rate: 0.7    # Probability of crossover for each pair

#------------------------------------------------------------------------------
# Metric weights for standalone chord evaluation
#------------------------------------------------------------------------------
standalone_weights:
  # Weights for different chord characteristics (higher = more important)
  CHORD_LENGTH: 1.0
  HORIZONTAL_PINCH: 1.2
  HORIZONTAL_STRETCH: 1.3
  VERTICAL_PINCH: 1.2
  VERTICAL_STRETCH: 1.4
  DIAGONAL_DOWNWARD_PINCH: 1.3
  DIAGONAL_DOWNWARD_STRETCH: 1.5
  DIAGONAL_UPWARD_PINCH: 1.3
  DIAGONAL_UPWARD_STRETCH: 1.5
  SAME_FINGER_DOUBLE_ADJACENT: 1.5
  SAME_FINGER_DOUBLE_GAP: 2.0
  SAME_FINGER_TRIPLE: 3.0
  FULL_SCISSOR_DOUBLE: 1.7
  FULL_SCISSOR_TRIPLE: 2.5
  FULL_SCISSOR_QUADRUPLE: 3.0
  FULL_SCISSOR_QUINTUPLE: 4.0
  HALF_SCISSOR_DOUBLE: 1.5
  HORIZONTAL_STRETCH_DOUBLE: 1.6
  PINKY_RING_SCISSOR: 2.0
  RING_INDEX_SCISSOR: 1.8

#------------------------------------------------------------------------------
# Metric weights for token-chord assignments
#------------------------------------------------------------------------------
assignment_weights:
  # Weights for different assignment characteristics
  FIRST_LETTER_UNMATCHED: 1.5 # Penalty when first letter isn't in chord
  SECOND_LETTER_UNMATCHED: 1.2 # Penalty when second letter isn't in chord
  LAST_LETTER_UNMATCHED: 1.3 # Penalty when last letter isn't in chord
  PHONETIC_DISSIMILARITY: 1.1 # Penalty for phonetic mismatches
  EXTRA_LETTER: 1.2 # Penalty for extra letters in chord

#------------------------------------------------------------------------------
# Metric weights for full assignment set evaluation
#------------------------------------------------------------------------------
set_weights:
  # Weights for evaluating complete assignment sets
  FINGER_UTILIZATION: 1.0 # Balance of finger usage across all chords
  HAND_UTILIZATION: 1.0 # Balance between left and right hand usage
  CHORD_PATTERN_CONSISTENCY: 1.0 # Consistency of chord patterns

#------------------------------------------------------------------------------
# Debug settings
#------------------------------------------------------------------------------
debug:
  # Enable debug mode
  enabled: false

  # Log level (ERROR, WARNING, INFO, DEBUG)
  log_level: "INFO"

  # Log file name with extension (saved in debug_dir)
  log_file: "chord_generator.log"

  # Whether to print detailed cost breakdowns
  print_cost_details: false

  # Whether to save intermediate results during processing
  save_intermediate_results: false

#------------------------------------------------------------------------------
# Benchmarking options
#------------------------------------------------------------------------------
benchmark:
  # Enable benchmarking mode
  enabled: false

  # Track metrics for individual calculations (more detailed but slower)
  track_individual_metrics: false

  # How often to update progress display (in number of items)
  visual_update_interval: 100
